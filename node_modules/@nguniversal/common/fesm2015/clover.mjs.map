{"version":3,"file":"clover.mjs","sources":["../../../../../../modules/common/clover/src/styles_host.ts","../../../../../../modules/common/clover/src/module.ts","../../../../../../modules/common/clover/src/transfer-http-cache/transfer-http-cache.interceptor.ts","../../../../../../modules/common/clover/src/transfer-http-cache/transfer-http-cache.module.ts","../../../../../../modules/common/clover/public_api.ts","../../../../../../modules/common/clover/index.ts","../../../../../../modules/common/clover/clover.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { DOCUMENT, ɵgetDOM as getDOM } from '@angular/common';\nimport { APP_ID, Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { ɵSharedStylesHost as SharedStylesHost } from '@angular/platform-browser';\n\ndeclare let ngDevMode: boolean | {} | undefined;\n\n@Injectable()\nexport class SSRStylesHost extends SharedStylesHost implements OnDestroy {\n  private head: HTMLHeadElement | null;\n  private _styleNodes = new Set<HTMLElement>();\n  private _styleNodesInDOM: Map<string | null, HTMLElement> | undefined;\n\n  constructor(\n    @Inject(DOCUMENT) private doc: Document,\n    @Optional() @Inject(APP_ID) private appId?: string,\n  ) {\n    super();\n    this.head = this.doc.querySelector('head');\n    const styles = this.head?.querySelectorAll(`style[ng-style='${this.appId}']`);\n    if (styles?.length) {\n      const items = Array.from(styles) as HTMLElement[];\n      this._styleNodesInDOM = new Map(items.map((el) => [el.textContent, el]));\n    }\n  }\n\n  private _addStyle(style: string): void {\n    const element = this._styleNodesInDOM?.get(style);\n    if (element) {\n      if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        element.setAttribute('_ng-style-re-used', '');\n      }\n\n      this._styleNodesInDOM?.delete(style);\n      this._styleNodes.add(element);\n\n      return;\n    }\n\n    const el = getDOM().createElement('style');\n    el.textContent = style;\n\n    if (this.appId) {\n      el.setAttribute('ng-style', this.appId);\n    }\n\n    if (this.head) {\n      this.head.appendChild(el);\n    }\n\n    this._styleNodes.add(el);\n  }\n\n  onStylesAdded(additions: Set<string>) {\n    additions.forEach((style) => this._addStyle(style));\n  }\n\n  addHost(_hostNode: Node): void {\n    // stub\n  }\n\n  removeHost(_hostNode: Node): void {\n    // stub\n  }\n\n  ngOnDestroy() {\n    this._styleNodes.forEach((styleNode) => styleNode.remove());\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { DOCUMENT, ɵPLATFORM_SERVER_ID as PLATFORM_SERVER_ID } from '@angular/common';\nimport {\n  APP_ID,\n  ApplicationRef,\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  BrowserModule,\n  ɵDomSharedStylesHost as DomSharedStylesHost,\n  ɵSharedStylesHost as SharedStylesHost,\n  TransferState,\n  ɵescapeHtml as escapeHtml,\n} from '@angular/platform-browser';\nimport { filter, mapTo, take } from 'rxjs/operators';\nimport { SSRStylesHost } from './styles_host';\n\nexport interface NGRenderModeAPI {\n  getSerializedState: () => string | undefined;\n  getWhenStable: () => Promise<void>;\n  appId?: string;\n}\n\nexport type NGRenderMode = boolean | undefined | NGRenderModeAPI;\ndeclare let ngRenderMode: NGRenderMode;\n\n@NgModule({\n  exports: [BrowserModule],\n  imports: [],\n  providers: [],\n})\nexport class RendererModule {\n  constructor(\n    private applicationRef: ApplicationRef,\n    @Optional() private transferState?: TransferState,\n    @Optional() @Inject(APP_ID) private appId?: string,\n  ) {\n    if (typeof ngRenderMode !== 'undefined' && ngRenderMode) {\n      ngRenderMode = {\n        getSerializedState: () =>\n          this.transferState ? escapeHtml(this.transferState.toJson()) : undefined,\n        appId: this.appId,\n        getWhenStable: () =>\n          this.applicationRef.isStable\n            .pipe(\n              filter((isStable) => isStable),\n              take(1),\n              mapTo(undefined),\n            )\n            .toPromise(),\n      };\n    }\n  }\n\n  static forRoot(): ModuleWithProviders<RendererModule> {\n    return {\n      ngModule: RendererModule,\n      providers: [\n        ...(typeof ngRenderMode !== 'undefined' && ngRenderMode\n          ? [\n              { provide: PLATFORM_ID, useValue: PLATFORM_SERVER_ID },\n              { provide: SSRStylesHost, useClass: SSRStylesHost, deps: [DOCUMENT, APP_ID] },\n            ]\n          : [{ provide: SSRStylesHost, useClass: SSRStylesHost, deps: [DOCUMENT] }]),\n        { provide: SharedStylesHost, useExisting: SSRStylesHost },\n        { provide: DomSharedStylesHost, useClass: SSRStylesHost },\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpParams,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { ApplicationRef, Injectable } from '@angular/core';\nimport { StateKey, TransferState, makeStateKey } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\n\ntype ResponseType = HttpRequest<unknown>['responseType'];\n\ninterface TransferHttpResponse {\n  body?: any | null;\n  headers?: Record<string, string[]>;\n  status?: number;\n  statusText?: string;\n  url?: string;\n  responseType?: ResponseType;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n  private isCacheActive = true;\n\n  private makeCacheKey(\n    method: string,\n    url: string,\n    params: HttpParams,\n    responseType?: ResponseType,\n  ): StateKey<TransferHttpResponse> {\n    // make the params encoded same as a url so it's easy to identify\n    const encodedParams = params\n      .keys()\n      .sort()\n      .map((k) => `${k}=${params.getAll(k)}`)\n      .join('&');\n\n    const key = (method === 'GET' ? 'G.' : 'H.') + responseType + '.' + url + '?' + encodedParams;\n\n    return makeStateKey(key);\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable) => isStable),\n        take(1),\n        tap(() => (this.isCacheActive = false)),\n      )\n      .subscribe();\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!this.isCacheActive || !['GET', 'HEAD'].includes(req.method)) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const storeKey = this.makeCacheKey(req.method, req.url, req.params, req.responseType);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {});\n      let body: ArrayBuffer | Blob | string | undefined = response.body;\n\n      switch (response.responseType) {\n        case 'arraybuffer':\n          {\n            // If we're in Node...\n            if (typeof Buffer !== 'undefined') {\n              const buf = Buffer.from(response.body);\n              body = new ArrayBuffer(buf.length);\n              const view = new Uint8Array(body);\n              for (let i = 0; i < buf.length; ++i) {\n                view[i] = buf[i];\n              }\n            } else if (typeof TextEncoder !== 'undefined') {\n              // Modern browsers implement TextEncode.\n              body = new TextEncoder().encode(response.body).buffer;\n            }\n          }\n          break;\n        case 'blob':\n          body = new Blob([response.body]);\n          break;\n      }\n\n      return of(\n        new HttpResponse<any>({\n          body,\n          headers: new HttpHeaders(response.headers),\n          status: response.status,\n          statusText: response.statusText,\n          url: response.url,\n        }),\n      );\n    }\n\n    // Request not found in cache. Make the request and cache it.\n    const httpEvent = next.handle(req);\n\n    return httpEvent.pipe(\n      tap((event: HttpEvent<unknown>) => {\n        if (event instanceof HttpResponse) {\n          this.transferState.set<TransferHttpResponse>(storeKey, {\n            body: event.body,\n            headers: this.getHeaders(event.headers),\n            status: event.status,\n            statusText: event.statusText,\n            url: event.url ?? '',\n            responseType: req.responseType,\n          });\n        }\n      }),\n    );\n  }\n\n  private getHeaders(headers: HttpHeaders): Record<string, string[]> {\n    const headersMap: Record<string, string[]> = {};\n\n    for (const key of headers.keys()) {\n      const value = headers.getAll(key);\n      if (typeof value === 'string') {\n        headersMap[key] = value;\n      }\n    }\n\n    return headersMap;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport { TransferHttpCacheInterceptor } from './transfer-http-cache.interceptor';\n\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    { provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {\n  RendererModule,\n  NGRenderMode as ɵNGRenderMode,\n  NGRenderModeAPI as ɵNGRenderModeAPI,\n} from './src/module';\nexport { TransferHttpCacheModule } from './src/transfer-http-cache/transfer-http-cache.module';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["SharedStylesHost","getDOM","escapeHtml","PLATFORM_SERVER_ID","DomSharedStylesHost"],"mappings":"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"}